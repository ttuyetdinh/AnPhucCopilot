generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

enum MessageRole {
  system
  user
  assistant
}

model Conversation {
  id        String    @id @default(cuid())
  name      String
  summary   String?   @db.Text
  clerkId   String    @map("clerk_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  messages  Message[]

  @@map("conversations")
}

model Message {
  id             String       @id @default(cuid())
  role           MessageRole
  content        String       @db.Text
  parts          Json         @default("[]")
  isInSummary    Boolean      @default(false)
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  conversationId String       @map("conversation_id")
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@map("messages")
}

model Document {
  id        String          @id @default(cuid())
  fileName  String          @unique @map("file_name")
  content   Json
  clerkId   String          @map("clerk_id")
  createdAt DateTime        @default(now()) @map("created_at")
  updatedAt DateTime        @updatedAt @map("updated_at")
  chunks    DocumentChunk[]

  @@map("documents")
}

model DocumentChunk {
  id         String                       @id @default(cuid())
  content    String                       @db.Text
  vector     Unsupported("vector(1536)")?
  metadata   Json                         @default("{}")
  documentId String                       @map("document_id")
  document   Document                     @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@map("document_chunks")
}
